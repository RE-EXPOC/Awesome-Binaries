from exploits import *
import logging

l = logging.getLogger("aegg.exploiter.")


class Exploiter(object):
    def __init__(self, binary):
        self.binary = binary
        self.exploits = [Ret2Stack, ROP]

    def generate(self, path, analysis):
        for exploit in self.exploits:
            exp = exploit(self.binary, path, analysis)

            l.info('Test exploit: %s ...' % exp.__class__.__name__)
            while True:
                if exp.exploitable():
                    l.debug('payload: %s' % repr(exp.payload))
                    yield exp.payload
                if not exp.gen_next():
                    break
        l.info('... done.')
        yield ''

