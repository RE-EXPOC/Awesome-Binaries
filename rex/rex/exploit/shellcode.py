import logging
l = logging.getLogger("rex.exploit.shellcode")

class Shellcode(object):
    '''
    describes a piece of shellcode, meant only as a super class
    '''

    # string describing the OS this shellcode applies to
    os = None

    # string describing the architecture this shellcode runs on
    arch = None

    # hexadecimal string representing the shellcode itself
    hex_code = None

    # list of OS values this supports
    supported_platforms = []

    # a simple name
    name = None

    @property
    def has_options(self):
        '''
        does the shellcode have options which can be applied? if it can have options, we
        give a warning if options are not applied
        '''

        return False

    def to_raw(self, **kwargs):
        '''
        return a raw string representing the shellcode, subclasses which more sophisticated
        shellcodes will want to take options here
        '''

        return bytes.fromhex(self.hex_code)
